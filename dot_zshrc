# ---------------------
# ohmyzsh configuration
# ---------------------

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export PATH=$HOME/.local/bin:/usr/local/bin:$HOME/Applications/GNAT/2020/bin:$PATH
export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="powerlevel10k/powerlevel10k"
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )
# CASE_SENSITIVE="true"
# HYPHEN_INSENSITIVE="true"
# DISABLE_AUTO_UPDATE="true"
DISABLE_UPDATE_PROMPT="true"
# export UPDATE_ZSH_DAYS=13
# DISABLE_MAGIC_FUNCTIONS=true
# DISABLE_LS_COLORS="true"
# DISABLE_AUTO_TITLE="true"
# ENABLE_CORRECTION="true"
# COMPLETION_WAITING_DOTS="true"
# DISABLE_UNTRACKED_FILES_DIRTY="true"
# HIST_STAMPS="mm/dd/yyyy"
# ZSH_CUSTOM=/path/to/new-custom-folder
GITSTATUS_LOG_LEVEL=DEBUG
ZSH_COMPDUMP="$ZSH_CACHE_DIR/.zcompdump"

plugins=(git gitfast command-not-found colored-man-pages docker-compose docker)

[[ ! -f $HOME/.p10k.zsh ]] || source ~/.p10k.zsh

source $ZSH/oh-my-zsh.sh

# ------------------
# User configuration
# ------------------

if [[ "$OSTYPE" == "darwin"* ]]; then
    export PATH="$HOME/.jenv/bin:$PATH"
    eval "$(jenv init -)"

    eval "$(rbenv init - zsh)"

    export PATH="$PATH:/home/avery/.spicetify"

    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

# export MANPATH="/usr/local/man:$MANPATH"
# export LANG=en_US.UTF-8
# export ARCHFLAGS="-arch x86_64"
export VISUAL="emacs"
export EDITOR="$VISUAL"

alias caddy="docker exec -w /etc/caddy backend-caddy caddy"
alias dcup="docker-compose up -d"
alias dcdown="docker-compose down"
alias dcrestart="docker-compose down && docker-compose up -d"
alias dlog="docker logs"
alias cdm="cd /mnt/hdd/merged/raw"
alias help="python /home/avery/.local/bin/help.py"

_gitignoreio_get_command_list() {
  curl -sL https://www.toptal.com/developers/gitignore/api/list | tr "," "\n"
}

_gitignoreio () {
  compset -P '*,'
  compadd -S '' `_gitignoreio_get_command_list`
}

compdef _gitignoreio git ignore