l
ls
ls -la
cd .config/zsh
l
ls
ls -la
ls -la
rm .history
ls -la
ll
ls -lA
mkdir plugins
emacs .zshrc
source .zshrc
touch plugins/test
source .zshrc
for f in $ZDOTDIR/plugins; echo $f
for f in $ZDOTDIR/plugins/*; echo $f
emacs .zshrc
source .zshrc
rm plugins/test
emacs plugins/zsh-syntax-highlighting.zsh
cd plugins
git clone https://github.com/zsh-users/zsh-completions.git
emacs .zshrc
cd ../
emacs .zshrc
emacs .zshrc
source .zshrc
cat .zshrc
l
ls
ls plugins
cd pluginsa
cd plugins
rm zsh-syntax-highlighting.zsh
pwd
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
echo "source ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
emacs ../.zshrc
source .zshrc
source ../.zshrc
echo $terminfpo
echo $terminfo
echo $terminfo[kLFT5]
echo $terminfo[kRIT5]
emacs ../.zshrc
source ../.zshrc
emacs ../.zshrc
source ../.zshrc
emacs ../.zshrc && source ../.zshrc
source
emacs ../.zshrc && source ../.zshrc
emacs ../.zshrc && source ../.zshrc
emacs ../.zshrc && source ../.zshrc
emacs ../.zshrc && source ../.zshrc
pwd
ls
ls -la
ls -la --color=auto
emacs ../.zshrc
source ../.zshrc
cat ../.zshrc
l
ll
la
alias l
man ls
sudo apt install man
whereis an
whereis man
man
/usr/local/man
file /usr/local/man
sudo apt install busybox
sudo man
sudo apt install man-db
man ls
l
ll
ls
l
emacs ../.zshrc && source ../.zshrc
l
source ../.zshrc
alias l;
l
l ~
emacs ../.zshrc
source ../.zshrc
l
l ~
pwd
git clone https://github.com/zsh-users/zsh-autosuggestions
emacs ../.zshrc
source ../.zshrc
l zsh-completions/README.md
pwd
cd ../
ls
mkdir themes
cd themes
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git
emacs .zshrc
pwd
cd ../
pwd
emacs .zshrc
source ../.zshrc
source .zshrc

l
ls
ls -la
cd .config/zsh
l
ls
ls -la
ls -la
rm .history
ls -la
ll
ls -lA
mkdir plugins
emacs .zshrc
source .zshrc
touch plugins/test
source .zshrc
for f in $ZDOTDIR/plugins; echo $f
for f in $ZDOTDIR/plugins/*; echo $f
emacs .zshrc
source .zshrc
rm plugins/test
emacs plugins/zsh-syntax-highlighting.zsh
cd plugins
git clone https://github.com/zsh-users/zsh-completions.git
emacs .zshrc
cd ../
emacs .zshrc
emacs .zshrc
source .zshrc
cat .zshrc
l
ls
ls plugins
cd pluginsa
cd plugins
rm zsh-syntax-highlighting.zsh
pwd
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
echo "source ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
emacs ../.zshrc
source .zshrc
source ../.zshrc
echo $terminfpo
echo $terminfo
echo $terminfo[kLFT5]
echo $terminfo[kRIT5]
emacs ../.zshrc
source ../.zshrc
emacs ../.zshrc
source ../.zshrc
emacs ../.zshrc && source ../.zshrc
source
emacs ../.zshrc && source ../.zshrc
emacs ../.zshrc && source ../.zshrc
emacs ../.zshrc && source ../.zshrc
emacs ../.zshrc && source ../.zshrc
pwd
ls
ls -la
ls -la --color=auto
emacs ../.zshrc
source ../.zshrc
cat ../.zshrc
l
ll
la
alias l
man ls
sudo apt install man
whereis an
whereis man
man
/usr/local/man
file /usr/local/man
sudo apt install busybox
sudo man
sudo apt install man-db
man ls
l
ll
ls
l
emacs ../.zshrc && source ../.zshrc
l
source ../.zshrc
alias l;
l
l ~
emacs ../.zshrc
source ../.zshrc
l
l ~
pwd
git clone https://github.com/zsh-users/zsh-autosuggestions
emacs ../.zshrc
source ../.zshrc
l zsh-completions/README.md
pwd
cd ../
ls
mkdir themes
cd themes
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git
emacs .zshrc
pwd
cd ../
pwd
emacs .zshrc
source ../.zshrc
source .zshrc

ls
l
sudo apt install exa
zshrc
ls
l
source .zshrc
source ~/.config/zsh/.zshrc
l
ls
exa
cat ~/.config/zsh/.zshrc
sudo apt install bat
bat ~/.config/zsh/.zshrc
man bat
sudo apt uninstall bat
sudo apt remove bat
sudo apt install bat
zshrc && source ~/.config/zsh/.zshrc
bat
cat ~/.config/zsh/.zshrc
emacs .zshrc
emacs ~/.config/zsh/.zshrc
p10k configure
p10k configure
p10k configure
zshrc
emacs ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
p10k configure
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" "." "./s"
 "builtin" ":" >>"/tmp/zsh-bench-V9ubRRRLT4/fifo" && "builtin" ":" <"/tmp/zsh-bench-V9ubRRRLT4/fifo" || "builtin" "exit"
 "builtin" "exit" "0"
ls
ls
exit
p10k configure
l
p10k configure
l
p10k configure
l
./zsh-bench/zsh-bench
l
cd .config/zsh/plugins/zsh-autosuggestions
cd
emacs ~/.config/zsh/.p10k.zsh
pyenv versions
python
asdasdsadasd
where
man where
sudo apt install tldr
tldr man
tldr
sudo apt remove tldr
sudo apt autoremovce
sudo apt autoremove
l
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
node --version
l
l .config
rm -rf .config/nvm
l .config/cache
sudo apt install nodejs
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
zshrc
source ~/.config/zsh/.zshrc
nvm
sudo apt remove nodejs
sudo apt autoremove
l
nvm
nvm install
l .config
ll .config
lt .config
ll .config
ls -a .config
ll .config
ll ~
l ~
ls ~
alias ls
exa ~
busybox ls
command -v nvm
nvm ls-remote
node
node --version
npm --version
sudo apt remove npm
where npm
nodejs --versin
echo $PATH
echo $PATH | grep npm
echo $PATH | grep *npm*
node.exe
nvm install node
where npm
npm
l
l.npm
l .npm
mkdir .config/emacs
mv .emacs.d/* .config/emacs
l
l .emacs.d
rm -r .emacs.d
mv .emacs .config/emacs
cd .config/emacs
l
la
l
emacs
l
l ~
l ~
mc .emacs init.el
mv .emacs init.el
l
emacs init.el
emacs init.el
emacs init.el
emacs init.el
cd ../
mkdir git
mv ~/.gitconfig git/config
git git config --global --list
git config --global --list
git config --list --show-origin --show-scope
node --version
where node
l
p10k
p10k display
emacs ~/.config/zsh/.p10k.zsh
source ~/.config/zsh/.p10k.zsh
emacs ~/.config/zsh/.p10k.zsh
l /mnt
l ~
mkdir /mnt/h
sudo mkdir /mnt/h
l /mntr
ll /mnt
ls -la /mnt
ls -lA /mnt
man exa
ls -laa /mnt
ll -laa /mnt
sudo chown avery:avery /mnt/h 
ll -laa /mnt
chmod 777 /mnt/h
ll -laa /mnt
file /mnt/c
sudo apt install file
file /mnt/c
file /mnt/h
cd /etc/
l
emacs
l
emacs
cat mtab
cat fstab
emacs
l
cat fstab
sudo mount
sudo mount -a
emacs /etc/fstab
l
emacs /etc/fstab
l
l ~
l ~/.cache
rm ~/.cache
rm -r ~/.cache
sudo mount -a
l /mnt
rm -r /mnt/h
sudo rm -r /mnt/h
sudo mount -a
sudo mkdir /mnt/h && sudo chown avery:avery /mnt/h && chmod 777 /mnt/h
ll /mnt
sudo apt install cifs-utils
where python
python
python3
pyenv
pyenv versions
pyenv latest
pyenv which system
pyenv which 
pyenv which python
pyenv which python3
pyenv version
pyenv version-origin
pyenv shims
emacs
cat fstab
emacs ~/.smb
chmod 600 ~/.smb
sudo mount -a
modprobe cifs\

cifs
lsmod
sudo mount -t drvfs '\\rowanads.rowan.edu\home\bobbit82' /mnt/h
l /h
l /mnt/h
sudo umount /mnt/h
emacs
cat fstab
sudo mount -a
emacs
emacs
id
sudo umount /mnt/h
l /mnt
ll /mnt
ll /mnt/*
sudo mount -a
ll /mnt/*
ls
cd documents
l
sudo apt install neofetch
pyenv versions
pyenv install --list
pyenv install 3.12.2
pyenv install 3.12
sudo apt update; sudo apt install build-essential libssl-dev zlib1g-dev \\
libbz2-dev libreadline-dev libsqlite3-dev curl \\
libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
l ~/.pyenv/versions
la ~/.pyenv/versions
ll ~/.pyenv/versions
pyenv install -v 3.12
cd documents
cd ldap-to-csv
git add . && git commit -m "improved query validation and added parenthesis checking"
l
stat .git/objects
whoami
id
chown -R avery:avery .git
git add . && git commit -m "improved query validation and added parenthesis checking"
git diff
git status
git.exe add . && git commit -m "improved query validation and added parenthesis checking"
sudo git add .
sudo git commit -m "improved query validation and added parenthesis checking"
l
l
mount
emacs
l
cd documents
l
mv ldap-to-csv ldap-to-csv-backup
git clone https://stash.rowan.edu/scm/esadevops/rowan-app-ldap_to_spreadsheet.git
cd
l
mkdir repos
cd repos
pwd
git clone https://stash.rowan.edu/scm/esadevops/rowan-app-ldap_to_spreadsheet.git
l
mv rowan-app-ldap_to_spreadsheet ldap-to-csv
l ldap-to-csv && l ~/documents/ldap-to-csv-backup
l ldap-to-csv && echo "\n" && l ~/documents/ldap-to-csv-backup
cp ~/documents/ldap-to-csv-backup/app/config.yml ldap-to-csv/app
l ldap-to-csv/app
l ~/documents/ldap-to-csv-backup/app
where pyhton
python3 --version
sudo apt remove python3
sudo apt autoremove
python
python3
python3.dll
python3.exe
python.exe --version
pyenv install -v 3.12
l
l
cd repos
l
sudo apt install build-essential gdb lcov pkg-config \\
      libbz2-dev libffi-dev libgdbm-dev libgdbm-compat-dev liblzma-dev \\
      libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev \\
      lzma lzma-dev tk-dev uuid-dev zlib1g-dev
cd ldap-to-csv
git add . && git commit -m "allowed ':' in query"
git push
where git
whereis
whereis git
man whereis
l /mn
l /mnt
l /mnt/h
cd ../
git clone git@github.com:averybobbitt/workplace-violence-prediction-api.git
ssh-keygen
cat ~/.ssh/id_rsa.pub
git clone git@github.com:averybobbitt/workplace-violence-prediction-api.git
l
cd .pyenv
l
sudo apt install viu
echo $TERM
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
cat ~/.profile
rm ~/.profile
zshrc
rustup uninstall
rust uninstall
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
cat ~/.config/zsh/.zshenv
emacs ~/.config/zsh/.zshrc
rm ~/.profile
cat ~/.config/zsh/.zshenv
echo $CARGO_HOME
rust
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
l ~
source ~/.zshenv
cat ~/.config/zsh/.zshenv
source ~/.config/zsh/.zshrc
rust
cat ~/.config/zsh/.zshrc
 [ -n "$CARGO_HOME" ] 
source "$HOME/.cargo/env"
$CARGO_HOME
echo $CARGO_HOME
rustup
zshrc
l
cd versions
l
curl https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tgz
curl https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tgz --output python312.tgz
l
tar -xvf python312.tgz
l
rm python312.tgz
cd Python-3.12.2
l
cd ../
rm -r Python-3.12.2
sudo apt install build-essential libssl-dev zlib1g-dev \\
libbz2-dev libreadline-dev libsqlite3-dev curl \\
libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev llvm
sudo apt install build-essential libssl-dev zlib1g-dev \\
libbz2-dev libreadline-dev libsqlite3-dev curl \\
libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
sudo apt install llvm
where python
where python3
python3 --version
rm ~/.python_history
echo $BASH_ENV
pyenv install -v 3.12
l
python
where python3
sudo apt 
sudo apt list
sudo apt list | grep installed
emacs ~/.config/zsh/.zshrc
emacs ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
alias reload
reload
exit
exit
zsh
exit
zsh
exec zsh
exit
pyenv
emacs ~/.config/zsh/.zshrc
reload
emacs ~/.config/zsh/.zshrc
emacs ~/.config/zsh/.zshrc
emacs ~/.config/zsh/.zshenv
emacs ~/.config/zsh/.zprofile
reload
echo $SHELL
emacs ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
reload
clear
emacs ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
reload
uname
uname -a
lsb_release -a
cat /etc/os-release
emacs /etc/apt
sudo apt update && sudo apt build-dep python3 && sudo apt install pkg-config build-essential gdb lcov pkg-config libbz2-dev libffi-dev libgdbm-dev libgdbm-compat-dev liblzma-dev libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev lzma lzma-dev tk-dev uuid-dev zlib1g-dev
emacs /etc/apt/sources.list
sudo apt update && sudo apt build-dep python3 && sudo apt install pkg-config build-essential gdb lcov pkg-config libbz2-dev libffi-dev libgdbm-dev libgdbm-compat-dev liblzma-dev libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev lzma lzma-dev tk-dev uuid-dev zlib1g-dev
pyenv install -v 3.12
pyenv versions
pyenv global 3.12.2
sudo apt remove python3
sudo apt autoremove
pyenv versions
python --version
where python
where python3
where pip
where pip3
file $(where python3)
file $(where python)
cat $(where python)
cat $(where python3)
where pyev
where pyenv
python --version
python --help
l
l
ls
l
l
cat .smb
cat /etc/fstab
rm .smb
where python
pyenv virtualenv
pyenv virtualenv --help
source .venv/bin/activate
where python
pip install
pip install -r requirements.txt
l
cat /etc/resolv.conf
cd repos/ldap-to-csv
source .venv/bin/activate
pip install -r requirements.txt
emacs 
ifconfig
ip addr
cd repos/ldap-to-csv
source .venv/bin/activate
pip install -r requirements.txt
sudo vi /etc/resolv.conf
emacs /etc/resolv.conf
which python
whereis python
pyenv activate
pyenv versions
pyenv virtualenv --help
pyenv virtualenv .virtualenv
l
pyenv virtualenvs
pyenv uninstall .virtualenv
pyenv virtualenvs
source .venv/bin/activate
where python
cat /etc/resolv.conf
ping google.com
sudo ping google.com
sudo nano /etc/resolv.conf
cat /etc/resolv.conf
cat /etc/resolv.conf
sudo ping google.com
ping google.com
l /etc/resolv.conf
cd repos/ldap-to-csv
source .venv/bin/activate
pip install -r requirements.txt
pip install --upgrade pip
cd ~/.pyenv
l
l plugins
pyenv activate
l
cd ~/repos/ldap-to-csv
l
rm -r .venv
l
where python
cd ../
reload
python --version
cd repos/ldap-to-csv
l
pyenv virtualenv ldap-to-csv
pyenv local ldap-to-csv
emacs .gitignore
git add . && git commit -m "added pyenv version file to gitignore" && git push
cat /etc/resolv.conf
sudo nano /etc/resolv.conf
sudo nano /etc/wsl.conf
exit
sudo nano /etc/resolv.conf
sudo nano /etc/wsl.conf
exit
sudo nano /etc/resolv.conf
sudo nano /etc/wsl.conf
cat /etc/resolv.conf
cd repos/ldap-to-csv
git push
sudo systemctl status
sudo apt install dnsmasq
sudo nano /etc/wsl.conf
sudo systemctl status
sudo systemctl status dnsmasq.service
ping google.com
sudo ping google.com
sudo ping stash.rowan.edu
dnsmasq --test
dnsmasq
sudo dnsmasq
drill
sudo nano /etc/resolv.conf
sudo nano /etc/dnsmasq.conf
ls
sudo nano /etc/dnsmasq.conf
sudo systemctl disable dnsmasq.service
sudo systemctl stop dnsmasq.service
sudo -e /etc/resolv.conf
sudo -e /etc/dnsmasq.conf
cat /etc/dnsmasq.conf
sudo systemctl enable dnsmasq.service
sudo systemctl restart dnsmasq.service
sudo systemctl status dnsmasq.service
cat /etc/hosts
ping google.com
sudo ping google.com
sudo ping stash.google.com
sudo ping stash.rowan.edu
sudo ping rowan.edu
sudo systemctl status dnsmasq.service
nslookup
sudo apt install nslookup
dig
sudo apt install dig
sudo apt install ldns
sudo apt install ldnsutils
drill
drill google.com
drill stash.rowan.edu
cd repos/ldap-to-csv
gp
git push
git config --global --unset https.proxy
git config --global --unset http.proxy
git config --global --list
git push
 172.26.224.1
git config --global --unset http.proxy \
git config --global --unset https.proxy
cd repos/ldap-to-csv
git push
drill stash.rowan.edu
drill asdadasd.rowan.edu
sudo -e /etc/dnsmasq.conf
sudo systemctl restart dnsmasq.service
sudo systemctl status dnsmasq.service
drill asdadasd.rowan.edu
drill stash.rowan.edu
git push
cat /etc/resolv.conf
sudo rm /etc/resolv.conf
cat /etc/wsl.conf
alias reboot
cd ../
python
python
where python
~/.pyenv/versions/3.12.2/envs/speedtest/bin/p
where python
pip --version
python --version
whereis python
which python
python
pip install requests
python
cat /etc/wsl.conf
cat /etc/resolv.conf
sudo -e /etc/resolv.conf
sudo netstat 
sudo apt install net-tools
sudo -e /etc/resolv.conf
sudo systemctl restart dnsmasq.service
sudo apt install net-tools
ping stash.rowan.edu
sudo ping stash.rowan.edu
sudo ping csm.rowan.edu
sudo netstat -tulpen | grep dnsmasq
drill stash.rowan.edu
drill google.com
cat /etc/resolv.conf
sudo -e /etc/dnsmasq.conf
sudo systemctl restart dnsmasq.service
sudo systemctl status dnsmasq.service
drill stash.rowan.edu
drill rowan.edu
cd repos/ldap-to-csv
git push
cd ../
l
mkdir speedtest
cd speedtest
git init
git config --global init.defaultBranch main
git config --global --list
zshrc
zshrc
source ~/.config/zsh/.zshrc
git init
cd ../
cd speedtest
rm -r .git
l
git init
l ~
rm -rf .virtualenv
pyenv virtualenv speedtest
pyenv local speedtest
l
l ~/.pyenv/versions
l ~/.pyenv/versions/3.12.2/envs/speedtest/bin/python
cp -r /mnt/c/Users/bobbit82/Downloads/speedtest-master/backend ./app
cp -r /mnt/c/Users/bobbit82/Downloads/speedtest-master/results ./app
cp -r /mnt/c/Users/bobbit82/Downloads/speedtest-master/examples/*.html ./templates
cd templates
l
rename 's/example-//' example-*
sudo apt install rename
rename 's/example-//' example-*
l
rename 's/singleServer//' single*
l
rename 's/^-/single-/' -*
l
rename 's/multipleServers/multi/' multipleServers*
l
cd 
python
cd -
c ../
cd ../
cp -r /mnt/c/Users/bobbit82/Downloads/speedtest-master/*.js static
rm -rf *
l
rm -rf .git .gitignore .idea .python-version
l
cd
wget [200~https://go.dev/dl/go1.22.1.linux-amd64.tar.gz~
wget https://go.dev/dl/go1.22.1.linux-amd64.tar.gz
sudo apt install wget
wget https://go.dev/dl/go1.22.1.linux-amd64.tar.gz
l
 rm -rf /usr/local/go && tar -C /usr/local -xzf go1.22.1.linux-amd64.tar.gz
 rm -rf /usr/local/go
l
sudo tar -C /usr/local -xzf go1.22.1.linux-amd64.tar.gz
l
emacs .config/zsh/.zprofile
source .config/zsh/.zprofile
echo $PATH
go
go version
where go
l ~
rm ~/go1.22.1.linux-amd64.tar.gz
rm -r ~/.pycharm_helpers
l
cd repos
l
mv speedtest speedtest-local
git clone https://github.com/librespeed/speedtest
cd speedtest
git checkout go
cd ../
rm -r speedtest
rm -rf speedtest
mv speedtest-local speedtest
cd cp
cd speedtest
l
emacs Dockerfile
cp -r /mnt/c/Users/bobbit82/Downloads/speedtest-master/* .
l
rm doc_docker.md doc.md LICENSE README.md
l
cat index.html
rm index.html
cat examples
l examples
cp examples/example-singleServer-gauges.html index.html
l
docker
docker
docker
docker run hello-world
id
cat /etc/groups
groups
cut -d: -f1,6 /etc/passwd
sudo groupadd docker
sudo usermod -aG docker avery
reload
man newgrp
id
docker
docker run hello-world
newgrp
where node
source .config/zsh/.zprofile
source ~/.config/zsh/.zprofile
where node
emacs ~/.config/zsh/.zprofile
source ~/.config/zsh/.zprofile
where node
npm i
l
node SpeedTest.js
cd src
node SpeedTest.js
id
docker run hello-world
cd repos/speedtest
l
emacs docker-compose.yml
emacs docker-compose.yml
emacs ~/.config/emacs/init.el
emacs docker-compose.yml
emacs docker-compose.yml
mv docker-compose.yml docker-compose.yaml
emacs docker-compose.yml
emacs docker-compose.yaml
mv docker-compose.yaml docker-compose.yml
emacs docker-compose.yml
cat ../ldap-to-csv/docker-compose.yml 
cat docker-compose.yml
emacs docker-compose.yml
docker compose build
docker compose up -d
docker logs speedtest
docker logs rowan-app-speedtest
docker logs rowan-app-speedtest
emacs docker-compose.yml
docker compose down
docker compose up
fg
docker compose up -d
git init
git add . && git commit -m "initial commit"
git push -u origin main
git remote add origin https://stash.rowan.edu/scm/esadevops/rowan-app-speedtest.git\

git push -u origin main
git add . && git commit -m "removed unnecessary files since we're not using telemetry right now"
git add . && git commit -m "readded results folder for compatibility"
l
git clone https://github.com/librespeed/speedtest.git && cd speedtest && git checkout node
l
mv * ../ && mv .* ../
l
cd ../
l
cat .gitignore
l
rm -r speedtest
y
y
l
rm README.md
l
cat .directory
rm .directory
l
l .logo
cat package.json
npm install
l
npm install -g npm@10.5.0 
where node
nvm
where nvm
l ~
node --version
zshrc
emacs .config/zsh/.zprofile
emacs ~/.config/zsh/.zprofile
nvm install node
echo $NVM_DIR
"$NVM_DIR/nvm.sh"
l ~/.config/nvm/
chmod +x ~/.config/nvm/nvm.sh
"$NVM_DIR/nvm.sh"
source "$NVM_DIR/nvm.sh"
nvm 
where nvm
whereis nvm
which nvm
nvm
nvm versions
nvm ls
where node
where npm
node --version
npm install
npm install -g npm@10.5.0 
git stats
git status
git add . && git commit -m "migrated to nodejs implementation"
l
l src/public/assets
l
git add . && git commit -m "idk how those files were generated but they don't exist anymore"
git status
git add . && git commit -m "added super rudimentary rowan flavoring"
docker init
dit add . && git commit -m "dockerized"
git add . && git commit -m "dockerized"
